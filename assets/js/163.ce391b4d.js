(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{753:function(v,_,a){"use strict";a.r(_);var t=a(2),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"微服务治理策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微服务治理策略"}},[v._v("#")]),v._v(" 微服务治理策略")]),v._v(" "),a("h2",{attrs:{id:"服务的注册和发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务的注册和发现"}},[v._v("#")]),v._v(" 服务的注册和发现")]),v._v(" "),a("p",[v._v("解决问题：集中管理服务")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Eureka")]),v._v(" "),a("li",[v._v("Zookeeper")])]),v._v(" "),a("h2",{attrs:{id:"负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[v._v("#")]),v._v(" 负载均衡")]),v._v(" "),a("p",[v._v("解决问题：降低服务器硬件压力")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Nginx")]),v._v(" "),a("li",[v._v("Ribbon")])]),v._v(" "),a("h2",{attrs:{id:"通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通讯"}},[v._v("#")]),v._v(" 通讯")]),v._v(" "),a("p",[v._v("解决问题：各个服务之间的沟通桥梁")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("REST（同步）")]),v._v(" "),a("li",[v._v("RPC（同步）")]),v._v(" "),a("li",[v._v("MQ（异步）")])]),v._v(" "),a("h2",{attrs:{id:"配置管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置管理"}},[v._v("#")]),v._v(" 配置管理")]),v._v(" "),a("p",[v._v("解决问题：随着服务的增加配置也在增加，如何管理各个服务的配置。")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Nacos")]),v._v(" "),a("li",[v._v("Spring Cloud Config")]),v._v(" "),a("li",[v._v("Apollo")])]),v._v(" "),a("h2",{attrs:{id:"容错和服务降级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容错和服务降级"}},[v._v("#")]),v._v(" 容错和服务降级")]),v._v(" "),a("p",[v._v("解决问题：在微服务当中，一个请求经常会涉及到调用几个服务，如果其中某个服务不可以，没有做服务容错的话，极有可能会造成一连串的服务不可用，这就是雪崩效应。")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Hystrix")])]),v._v(" "),a("h2",{attrs:{id:"服务依赖关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务依赖关系"}},[v._v("#")]),v._v(" 服务依赖关系")]),v._v(" "),a("p",[v._v("解决问题：多个服务之间来回依赖，启动关系的不明确。")]),v._v(" "),a("p",[v._v("解决方法：应用分层。")]),v._v(" "),a("h2",{attrs:{id:"服务文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务文档"}},[v._v("#")]),v._v(" 服务文档")]),v._v(" "),a("p",[v._v("解决问题：降低沟通成本")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Swagger")]),v._v(" "),a("li",[v._v("Java doc")])]),v._v(" "),a("h2",{attrs:{id:"服务安全问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务安全问题"}},[v._v("#")]),v._v(" 服务安全问题")]),v._v(" "),a("p",[v._v("解决问题：敏感数据的安全性")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Oauth")]),v._v(" "),a("li",[v._v("Shiro")]),v._v(" "),a("li",[v._v("Spring Security")])]),v._v(" "),a("h2",{attrs:{id:"流量控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流量控制"}},[v._v("#")]),v._v(" 流量控制")]),v._v(" "),a("p",[v._v("解决问题：避免一个服务上的流量过大拖垮整个服务体系")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Hystrix")])]),v._v(" "),a("h2",{attrs:{id:"自动化测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动化测试"}},[v._v("#")]),v._v(" 自动化测试")]),v._v(" "),a("p",[v._v("解决问题：提前预知异常，确定服务是否可用")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("junit")])]),v._v(" "),a("h2",{attrs:{id:"服务上线-下线的流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务上线-下线的流程"}},[v._v("#")]),v._v(" 服务上线，下线的流程")]),v._v(" "),a("p",[v._v("解决问题：避免服务随意的上线下线")]),v._v(" "),a("p",[v._v("解决方法：新服务上线需要经过管理人员审核，服务下线需要告知各个调用方进行修改，直到没有调用该服务才可以进行下线。")]),v._v(" "),a("h2",{attrs:{id:"兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兼容性"}},[v._v("#")]),v._v(" 兼容性")]),v._v(" "),a("p",[v._v("解决问题：服务开发持续进行如何做到兼容。")]),v._v(" "),a("p",[v._v("解决方法：通过版本号的形式进行管理，修改完成进行回归测试。")]),v._v(" "),a("h2",{attrs:{id:"服务编排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务编排"}},[v._v("#")]),v._v(" 服务编排")]),v._v(" "),a("p",[v._v("解决问题：解决服务依赖问题的一种方式")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("Docker")]),v._v(" "),a("li",[v._v("K8s")])]),v._v(" "),a("h2",{attrs:{id:"资源调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源调度"}},[v._v("#")]),v._v(" 资源调度")]),v._v(" "),a("p",[v._v("解决问题：每个服务的资源占用量不同，如何分配")]),v._v(" "),a("p",[v._v("解决方法：")]),v._v(" "),a("ul",[a("li",[v._v("JVM 隔离")]),v._v(" "),a("li",[v._v("Classload 隔离")]),v._v(" "),a("li",[v._v("硬件隔离")])]),v._v(" "),a("h2",{attrs:{id:"容量规划"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#容量规划"}},[v._v("#")]),v._v(" 容量规划")]),v._v(" "),a("p",[v._v("解决问题：随着时间增长，调用逐步增加，什么时候追加机器。")]),v._v(" "),a("p",[v._v("解决方法：统计每日调用量和响应时间，根据机器情况设置阈值，超过阈值就可以追加机器。")])])}),[],!1,null,null,null);_.default=r.exports}}]);