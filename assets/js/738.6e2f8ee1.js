(window.webpackJsonp=window.webpackJsonp||[]).push([[738],{1326:function(t,v,_){"use strict";_.r(v);var s=_(2),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"单一职责原则-srp"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单一职责原则-srp"}},[t._v("#")]),t._v(" 单一职责原则（SRP）")]),t._v(" "),_("p",[_("strong",[_("code",[t._v("SRP")])]),t._v(" , "),_("code",[t._v("Single Responsibility Principle")]),t._v(" 单一职责原则")]),t._v(" "),_("h3",{attrs:{id:"单一职责原则的定义"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单一职责原则的定义"}},[t._v("#")]),t._v(" 单一职责原则的定义")]),t._v(" "),_("p",[t._v("单一职责又称单一功能，职责指的是变化的原因，单一职责规定"),_("strong",[t._v("一个类有且仅有一个引起他变化的原因")]),t._v("，否则应该被拆分。")]),t._v(" "),_("p",[t._v("对象不应该承担太多职责，如果一个对象承担太多职责，至少有两个缺点：")]),t._v(" "),_("ol",[_("li",[t._v("一个职责的变化可能削弱或者抑制其他的职责的能力。")]),t._v(" "),_("li",[t._v("当客户端需要这个类的某一个职责时，不得不将他不需要的职责包含进来，造成冗余代码或者代码的浪费。")])]),t._v(" "),_("h3",{attrs:{id:"单一职责的优点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单一职责的优点"}},[t._v("#")]),t._v(" 单一职责的优点")]),t._v(" "),_("p",[t._v("单一职责的核心是控制类的粒度大小、将对象解耦、提高内聚。")]),t._v(" "),_("p",[t._v("优点如下：")]),t._v(" "),_("ol",[_("li",[t._v("降低类的复杂度")]),t._v(" "),_("li",[t._v("提高类的可读性")]),t._v(" "),_("li",[t._v("提高系统可维护性")]),t._v(" "),_("li",[t._v("变更引起的风险变低")])]),t._v(" "),_("h3",{attrs:{id:"单一职责的实现方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单一职责的实现方式"}},[t._v("#")]),t._v(" 单一职责的实现方式")]),t._v(" "),_("p",[t._v("将类的不同职责分离，封装到不同的类和模块中。")]),t._v(" "),_("p",[t._v("以大学生工作管理程序为例：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://img1.terwer.space/image-20220415105346056.png",alt:"image-20220415105346056"}})])])}),[],!1,null,null,null);v.default=a.exports}}]);